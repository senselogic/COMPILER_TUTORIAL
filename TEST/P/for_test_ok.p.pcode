ssp 0
ujp @program
define @function_void_main
ssp 10
; P/for_test_ok.p(10) : for i
; i of void_main
lda i 0 5
; -5
ldc i -5
sto i
define @for_1
; i of void_main
lda i 0 5
ind i
; 5
ldc i 5
leq i
fjp @for_end_1
; P/for_test_ok.p(12) : write i ;
; i of void_main
lda i 0 5
ind i
; P/for_test_ok.p(12) : write
prin
; i of void_main
lda i 0 5
; i of void_main
lda i 0 5
ind i
ldc i 1
add i
sto i
ujp @for_1
define @for_end_1
; P/for_test_ok.p(15) : for j
; j of void_main
lda i 0 6
; 0
ldc i 0
sto i
define @for_2
; j of void_main
lda i 0 6
ind i
; 9
ldc i 9
leq i
fjp @for_end_2
; P/for_test_ok.p(17) : write j ;
; j of void_main
lda i 0 6
ind i
; P/for_test_ok.p(17) : write
prin
; j of void_main
lda i 0 6
; j of void_main
lda i 0 6
ind i
ldc i 1
add i
sto i
ujp @for_2
define @for_end_2
; P/for_test_ok.p(20) : for k
; k of void_main
lda i 0 7
; 0
ldc i 0
sto i
define @for_3
; k of void_main
lda i 0 7
ind i
; -1
ldc i -1
leq i
fjp @for_end_3
; P/for_test_ok.p(22) : write k ;
; k of void_main
lda i 0 7
ind i
; P/for_test_ok.p(22) : write
prin
; k of void_main
lda i 0 7
; k of void_main
lda i 0 7
ind i
ldc i 1
add i
sto i
ujp @for_3
define @for_end_3
; P/for_test_ok.p(25) : for l
; l of void_main
lda i 0 8
; 0
ldc i 0
sto i
define @for_4
; l of void_main
lda i 0 8
ind i
; 0
ldc i 0
leq i
fjp @for_end_4
; P/for_test_ok.p(27) : write l ;
; l of void_main
lda i 0 8
ind i
; P/for_test_ok.p(27) : write
prin
; l of void_main
lda i 0 8
; l of void_main
lda i 0 8
ind i
ldc i 1
add i
sto i
ujp @for_4
define @for_end_4
; P/for_test_ok.p(30) : for m
; m of void_main
lda i 0 9
; 1
ldc i 1
sto i
define @for_5
; m of void_main
lda i 0 9
ind i
; 10
ldc i 10
leq i
fjp @for_end_5
; m of void_main
lda i 0 9
; m of void_main
lda i 0 9
ind i
ldc i 1
add i
sto i
ujp @for_5
define @for_end_5
; P/for_test_ok.p(34) : write m ;
; m of void_main
lda i 0 9
ind i
; P/for_test_ok.p(34) : write
prin
retp
define @program
mst 0
cup 0 @function_void_main
stp
; P/for_test_ok.p(1) :    Program
; P/for_test_ok.p(1) :        FunctionDeclaration
; P/for_test_ok.p(1) :            "func"
; P/for_test_ok.p(1) :            FunctionName
; P/for_test_ok.p(1) :                "main"
; P/for_test_ok.p(1) :            "("
; P/for_test_ok.p(1) :            FunctionParameterList
; P/for_test_ok.p(1) :            ")"
; P/for_test_ok.p(1) :            ":"
; P/for_test_ok.p(1) :            FunctionType
; P/for_test_ok.p(1) :                "void"
; P/for_test_ok.p(2) :            "{"
; P/for_test_ok.p(3) :            LocalDeclarationList
; P/for_test_ok.p(3) :                LocalDeclaration
; P/for_test_ok.p(3) :                    VariableDeclaration
; P/for_test_ok.p(3) :                        "var"
; P/for_test_ok.p(4) :                        Variable
; P/for_test_ok.p(4) :                            VariableName
; P/for_test_ok.p(4) :                                "i"
; P/for_test_ok.p(4) :                            ":"
; P/for_test_ok.p(4) :                            VariableType
; P/for_test_ok.p(4) :                                "int"
; P/for_test_ok.p(4) :                        ","
; P/for_test_ok.p(5) :                        Variable
; P/for_test_ok.p(5) :                            VariableName
; P/for_test_ok.p(5) :                                "j"
; P/for_test_ok.p(5) :                            ":"
; P/for_test_ok.p(5) :                            VariableType
; P/for_test_ok.p(5) :                                "int"
; P/for_test_ok.p(5) :                        ","
; P/for_test_ok.p(6) :                        Variable
; P/for_test_ok.p(6) :                            VariableName
; P/for_test_ok.p(6) :                                "k"
; P/for_test_ok.p(6) :                            ":"
; P/for_test_ok.p(6) :                            VariableType
; P/for_test_ok.p(6) :                                "int"
; P/for_test_ok.p(6) :                        ","
; P/for_test_ok.p(7) :                        Variable
; P/for_test_ok.p(7) :                            VariableName
; P/for_test_ok.p(7) :                                "l"
; P/for_test_ok.p(7) :                            ":"
; P/for_test_ok.p(7) :                            VariableType
; P/for_test_ok.p(7) :                                "int"
; P/for_test_ok.p(7) :                        ","
; P/for_test_ok.p(8) :                        Variable
; P/for_test_ok.p(8) :                            VariableName
; P/for_test_ok.p(8) :                                "m"
; P/for_test_ok.p(8) :                            ":"
; P/for_test_ok.p(8) :                            VariableType
; P/for_test_ok.p(8) :                                "int"
; P/for_test_ok.p(8) :                        ";"
; P/for_test_ok.p(10) :           StatementList
; P/for_test_ok.p(10) :               Statement
; P/for_test_ok.p(10) :                   ForStatement
; P/for_test_ok.p(10) :                       "for"
; P/for_test_ok.p(10) :                       VariableExpression
; P/for_test_ok.p(10) :                           VariableName
; P/for_test_ok.p(10) :                               "i"
; P/for_test_ok.p(10) :                       "="
; P/for_test_ok.p(10) :                       IntegerConstantExpression
; P/for_test_ok.p(10) :                           IntegerConstant
; P/for_test_ok.p(10) :                               "-5"
; P/for_test_ok.p(10) :                       "to"
; P/for_test_ok.p(10) :                       IntegerConstantExpression
; P/for_test_ok.p(10) :                           IntegerConstant
; P/for_test_ok.p(10) :                               "5"
; P/for_test_ok.p(11) :                       "{"
; P/for_test_ok.p(12) :                       StatementList
; P/for_test_ok.p(12) :                           Statement
; P/for_test_ok.p(12) :                               WriteStatement
; P/for_test_ok.p(12) :                                   "write"
; P/for_test_ok.p(12) :                                   VariableExpression
; P/for_test_ok.p(12) :                                       VariableName
; P/for_test_ok.p(12) :                                           "i"
; P/for_test_ok.p(12) :                                   ";"
; P/for_test_ok.p(13) :                       "}"
; P/for_test_ok.p(15) :               Statement
; P/for_test_ok.p(15) :                   ForStatement
; P/for_test_ok.p(15) :                       "for"
; P/for_test_ok.p(15) :                       VariableExpression
; P/for_test_ok.p(15) :                           VariableName
; P/for_test_ok.p(15) :                               "j"
; P/for_test_ok.p(15) :                       "="
; P/for_test_ok.p(15) :                       IntegerConstantExpression
; P/for_test_ok.p(15) :                           IntegerConstant
; P/for_test_ok.p(15) :                               "0"
; P/for_test_ok.p(15) :                       "to"
; P/for_test_ok.p(15) :                       IntegerConstantExpression
; P/for_test_ok.p(15) :                           IntegerConstant
; P/for_test_ok.p(15) :                               "9"
; P/for_test_ok.p(16) :                       "{"
; P/for_test_ok.p(17) :                       StatementList
; P/for_test_ok.p(17) :                           Statement
; P/for_test_ok.p(17) :                               WriteStatement
; P/for_test_ok.p(17) :                                   "write"
; P/for_test_ok.p(17) :                                   VariableExpression
; P/for_test_ok.p(17) :                                       VariableName
; P/for_test_ok.p(17) :                                           "j"
; P/for_test_ok.p(17) :                                   ";"
; P/for_test_ok.p(18) :                       "}"
; P/for_test_ok.p(20) :               Statement
; P/for_test_ok.p(20) :                   ForStatement
; P/for_test_ok.p(20) :                       "for"
; P/for_test_ok.p(20) :                       VariableExpression
; P/for_test_ok.p(20) :                           VariableName
; P/for_test_ok.p(20) :                               "k"
; P/for_test_ok.p(20) :                       "="
; P/for_test_ok.p(20) :                       IntegerConstantExpression
; P/for_test_ok.p(20) :                           IntegerConstant
; P/for_test_ok.p(20) :                               "0"
; P/for_test_ok.p(20) :                       "to"
; P/for_test_ok.p(20) :                       IntegerConstantExpression
; P/for_test_ok.p(20) :                           IntegerConstant
; P/for_test_ok.p(20) :                               "-1"
; P/for_test_ok.p(21) :                       "{"
; P/for_test_ok.p(22) :                       StatementList
; P/for_test_ok.p(22) :                           Statement
; P/for_test_ok.p(22) :                               WriteStatement
; P/for_test_ok.p(22) :                                   "write"
; P/for_test_ok.p(22) :                                   VariableExpression
; P/for_test_ok.p(22) :                                       VariableName
; P/for_test_ok.p(22) :                                           "k"
; P/for_test_ok.p(22) :                                   ";"
; P/for_test_ok.p(23) :                       "}"
; P/for_test_ok.p(25) :               Statement
; P/for_test_ok.p(25) :                   ForStatement
; P/for_test_ok.p(25) :                       "for"
; P/for_test_ok.p(25) :                       VariableExpression
; P/for_test_ok.p(25) :                           VariableName
; P/for_test_ok.p(25) :                               "l"
; P/for_test_ok.p(25) :                       "="
; P/for_test_ok.p(25) :                       IntegerConstantExpression
; P/for_test_ok.p(25) :                           IntegerConstant
; P/for_test_ok.p(25) :                               "0"
; P/for_test_ok.p(25) :                       "to"
; P/for_test_ok.p(25) :                       IntegerConstantExpression
; P/for_test_ok.p(25) :                           IntegerConstant
; P/for_test_ok.p(25) :                               "0"
; P/for_test_ok.p(26) :                       "{"
; P/for_test_ok.p(27) :                       StatementList
; P/for_test_ok.p(27) :                           Statement
; P/for_test_ok.p(27) :                               WriteStatement
; P/for_test_ok.p(27) :                                   "write"
; P/for_test_ok.p(27) :                                   VariableExpression
; P/for_test_ok.p(27) :                                       VariableName
; P/for_test_ok.p(27) :                                           "l"
; P/for_test_ok.p(27) :                                   ";"
; P/for_test_ok.p(28) :                       "}"
; P/for_test_ok.p(30) :               Statement
; P/for_test_ok.p(30) :                   ForStatement
; P/for_test_ok.p(30) :                       "for"
; P/for_test_ok.p(30) :                       VariableExpression
; P/for_test_ok.p(30) :                           VariableName
; P/for_test_ok.p(30) :                               "m"
; P/for_test_ok.p(30) :                       "="
; P/for_test_ok.p(30) :                       IntegerConstantExpression
; P/for_test_ok.p(30) :                           IntegerConstant
; P/for_test_ok.p(30) :                               "1"
; P/for_test_ok.p(30) :                       "to"
; P/for_test_ok.p(30) :                       IntegerConstantExpression
; P/for_test_ok.p(30) :                           IntegerConstant
; P/for_test_ok.p(30) :                               "10"
; P/for_test_ok.p(31) :                       "{"
; P/for_test_ok.p(32) :                       StatementList
; P/for_test_ok.p(32) :                       "}"
; P/for_test_ok.p(34) :               Statement
; P/for_test_ok.p(34) :                   WriteStatement
; P/for_test_ok.p(34) :                       "write"
; P/for_test_ok.p(34) :                       VariableExpression
; P/for_test_ok.p(34) :                           VariableName
; P/for_test_ok.p(34) :                               "m"
; P/for_test_ok.p(34) :                       ";"
; P/for_test_ok.p(35) :           "}"
